swagger: '2.0'
info:
  description:
    'TheCoin simple broker services.  This sample API is an example of how to setup the simplest
    low-volume exchange, when combined with the included server code, without external dependencies'
  version: '0.1.0'
  title: 'THE Coin Broker Sample'
  contact:
    email: 'stephen@thecoin.io'
  license:
    name: 'Apache 2.0'
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: 'broker-cad.appspot.com'
tags:
  - name: 'eTransfer'
    description: 'The Coin exchange service.  This API allows clients to exchange THESE for CAD'
  - name: 'Transfer'
    description: 'Request the broker to make a transfer on the clients behalf'
  - name: 'Secure'
    description: 'Functions to help secure an account'
consumes:
  - 'application/json'
produces:
  - 'application/json'
schemes:
  - 'https'

definitions:
  ############################################################

  # The message must be a signed JSON string, however
  # it is transmitted in string form to ensure the
  # differences in JSON parsing do not alter the signature
  SignedMessage:
    required:
      - message
      - signature
    properties:
      message:
        type: string
      signature:
        type: string

  CertifiedTransferRequest:
    required:
      - from
      - to
      - value
      - fee
      - timestamp
      - signature
    properties:
      # The address we transfer from
      from:
        type: string
      # the address we transfer to
      to:
        type: string
      # the amount THESE to transfer
      value:
        type: integer
      # the fee (in THESE) to be kept as part of the transfer
      fee:
        type: integer
      # the timestamp this message was signed at
      timestamp:
        type: integer
      # The signature is the following signed by {from}:
      # {from}->{to}\nval{value}\nfee{fee}\nts{timestamp}
      signature:
        type: string

  CertifiedTransferResponse:
    required:
      - message
      - txHash
    properties:
      # Some sort of message passed back(?)
      message:
        type: string
      # if the tx was submitted to the blockchain, this
      # parameter will contain the ID of the transaction
      # NOTE: This is returned before the tx is completed
      # so the user may well need to wait on the result
      txHash:
        type: string

  ############################################################

  # Encodes an arbitrary object into an encrypted form for encrypted-at-rest storage
  EncryptedPacket:
    required:
      - encryptedPacket
      - version
    properties:
      encryptedPacket:
        type: string
        # encrypted $ref: "#/definitions/BillPayeePacket"
      version:
        type: string

  CertifiedTransfer:
    required:
      - transfer
      - instructionPacket
      - signature
    properties:
      # Signed transfer request sending coin to the broker
      transfer:
        $ref: '#/definitions/CertifiedTransferRequest'
      # The transfer instructions, the type depends on
      # the operation being performed (Bill payment, eTransfer etc)
      instructionPacket:
        $ref: '#/definitions/EncryptedPacket'
      # Client must sign instruction + transfer.signature
      signature:
        type: string

  ############################################################

  # Do sale via certified request.  Sale includes token to
  # process transfer, and the email address the proceeds
  # are to be returned to.
  ETransferPacket:
    required:
      - email
      - question
      - answer
    properties:
      email:
        type: string
      question:
        type: string
      answer:
        type: string
      message:
        type: string

  eTransferCodeResponse:
    properties:
      code:
        type: string
      error:
        type: string

  # The minimum details required to pay this account
  BillPayeePacket:
    properties:
      payee:
        type: string
      accountNumber:
        type: string

  ############################################################
  #
  # Any general purpose info on the broker can be stored here.
  BrokerStatus:
    required:
      - address
      - certifiedFee
    properties:
      address:
        type: string
      # The broker must publicise it's fee for performing
      # certified transactions on behalf of the client
      certifiedFee:
        type: integer

  NewAccountReferal:
    required:
      - referrerId
      - newAccount
    properties:
      referrerId:
        type: string
      newAccount:
        type: string

  BoolResponse:
    title: A bool that to be returned indicating success/failure
    type: boolean
    properties:
      success:
        type: boolean

  ################################################################################

  GoogleAuthUrl:
    required:
      - url
    properties:
      url:
        type: string

  GoogleToken:
    required:
      - token
    properties:
      token:
        type: string

  GooglePutRequest:
    required:
      - token
      - wallet
      - walletName
    properties:
      token:
        $ref: '#/definitions/GoogleToken'
      wallet:
        type: string
      walletName:
        type: string

  GoogleFileIdent:
    required:
      - id
    properties:
      id:
        type: string
      name:
        type: string
      type:
        type: string

  GoogleWalletItem:
    required:
      - id
    properties:
      id:
        $ref: '#/definitions/GoogleFileIdent'
      wallet:
        type: string

  GoogleListResult:
    required:
      - wallets
    properties:
      wallets:
        type: array
        items:
          $ref: '#/definitions/GoogleFileIdent'

  GoogleGetResult:
    required:
      - wallets
    properties:
      wallets:
        type: array
        items:
          $ref: '#/definitions/GoogleWalletItem'

  ################################################################################

  SubscriptionDetails:
    properties:
      id:
        type: string
      email:
        type: string
      confirmed:
        type: boolean
      firstName:
        type: string
      lastName:
        type: string
      country:
        type: string
      city:
        type: string

paths:
  /status:
    get:
      tags:
        - Status
      summary: 'Gets the operating status of the broker'
      description: 'Returns info like brokers address, available balance, etc (?)'
      operationId: 'status'
      responses:
        405:
          description: 'Server Error'
        200:
          description: Server status
          schema:
            $ref: '#/definitions/BrokerStatus'
